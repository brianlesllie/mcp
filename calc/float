.data
str1: .asciiz "Digite 0=adição, 1=subtração, 2=multiplicação, 3=divisão ou 4=sair\n"
n1:   .asciiz "Digite um número real\n"
out_of_range: .asciiz "Out of range\n"
barra: .asciiz "\n"

jump_table: .word case0,case1,case2,case3,case4

# Mapeamento
# $f2=resultado


.text
main:
	
	mtc1 	$zero, $f12			#resultado=0
	
	la 	$a0, n1				#pega o primeiro numero p/ a operação
	li 	$v0, 4
	syscall
	li 	$v0, 6
	syscall
	add.s 	$f12, $f12, $f0
loop_switch:
	la 	$a0, str1
	li 	$v0, 4
	syscall
	
	li 	$v0, 5
	syscall
	
	add 	$s0, $zero, $v0

switch:
	li   	$t1, 5
	sltu 	$t0, $s0, $t1
	beq  	$t0, $zero, default
	
	la   	$t0, jump_table
	sll  	$t1, $s0, 2
	add  	$t0, $t0, $t1
	lw   	$t0, 0($t0)
	jr   	$t0
	
case0:
	la 	$a0, n1
	li 	$v0, 4
	syscall
	li 	$v0, 6
	syscall
	add.s 	$f12, $f12, $f0
	li 	$v0, 2
	syscall
	la 	$a0, barra
	li 	$v0, 4
	syscall
	j 	loop_switch

case1:
	la 	$a0, n1
	li 	$v0, 4
	syscall
	li 	$v0, 6
	syscall
	sub.s 	$f12, $f12, $f0
	li 	$v0, 2
	syscall
	la 	$a0, barra
	li 	$v0, 4
	syscall
	j 	loop_switch

case2:
	la 	$a0, n1
	li 	$v0, 4
	syscall
	li 	$v0, 6
	syscall
	mul.s 	$f12, $f12, $f0
	li 	$v0, 2
	syscall
	la 	$a0, barra
	li 	$v0, 4
	syscall
	j 	loop_switch	

case3:
	la 	$a0, n1
	li 	$v0, 4
	syscall
	li 	$v0, 6
	syscall
	div.s 	$f12, $f12, $f0
	li 	$v0, 2
	syscall
	la 	$a0, barra
	li 	$v0, 4
	syscall
	j 	loop_switch
	
case4:
	j 	switch_end
	
default:
	la 	$a0, out_of_range
	li 	$v0, 4
	syscall
	j 	loop_switch
	
switch_end:
	j 	main
